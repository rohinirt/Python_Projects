#!/usr/bin/env python
# coding: utf-8

# In[2]:


## Importing Libraries
import pandas as pd
import matplotlib.pyplot as plt
import plotly.graph_objs as go
import plotly.express as px
import plotly.io as pio
pio.templates.default = "plotly_white"


# In[3]:


##Importing Dataset
data = pd.read_csv("D:\Rohini Personal\Data Analysis\Projects Datasets\CLV using Python\customer_acquisition_data.csv")
print(data.head())


# ### 1) Distrribution of acquisition cost and revenue generated by the customer using histograms

# In[4]:


fig = px.histogram(data,
            x = "cost",
                  nbins = 20,
                  title = 'Distribution of Acquisition Cost')
fig.show()


# In[10]:


fig = px.histogram(data,
                  x = "revenue",
                  nbins = 20,
                  title = 'Distribution by Revenue')
fig.update_layout(
    width=800,
    height=400 
)
fig.show()


# ### 2)Comparision of acquisition across different channels and identify the most and least profitable channels

# In[6]:


cost_by_channel = data.groupby('channel')['cost'].mean().reset_index().sort_values(by = 'cost', ascending = False)
fig = px.bar(cost_by_channel,
            x = 'channel',
            y = 'cost',
            title = 'Customer Acquisition Cost by Channel')
fig.update_layout(
    width=800,
    height=400 
)
fig.show()


# ### 3)Channels effectiveness at converting customers

# In[7]:


conversion_by_channel = data.groupby('channel')['conversion_rate'].mean().reset_index().sort_values(by = 'conversion_rate', ascending = False)
fig = px.bar(conversion_by_channel, x = 'channel',
            y = 'conversion_rate',
            title = 'Conversion Rate by Channel')
fig.update_layout(
    width=800,
    height=400 
)
fig.show()


# ### 4)Total Revenue by Channel

# In[8]:


revenue_by_channel = data.groupby('channel')['revenue'].sum().reset_index().sort_values(by = 'revenue', ascending = False)
fig = px.bar(revenue_by_channel,
            x = 'channel',
            y = 'revenue',
            title = 'Total Revenue by Channel')
fig.update_layout(
    width=800,  # Set the width in pixels
    height=400  # Set the height in pixels
)
fig.show()


# ### 4)Return of Investment(ROI) by Channel

# In[9]:


data['roi'] = data['revenue']/data['cost']
roi_by_channel = data.groupby('channel')['roi'].mean().reset_index().sort_values(by = 'roi', ascending = False)

fig = px.bar(roi_by_channel,
            x = 'channel',
            y = 'roi',
            title = 'Return of Investment (ROI) by Channel')
fig.update_layout(
    width=800, 
    height=400
)
fig.show()

